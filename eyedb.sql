CREATE TABLE GENDER (
    GENDER_ID INT PRIMARY KEY,
    GENDER_NAME VARCHAR(8)
);

CREATE TABLE HOUR (
    HOUR_ID INT PRIMARY KEY,
    HOUR_NAME INT NOT NULL
);

CREATE TABLE WEEKDAY (
    WEEKDAY_ID INT PRIMARY KEY,
    WEEKDAY_NAME VARCHAR(10) NOT NULL
);

CREATE TABLE REGION (
    REGION_ID INT PRIMARY KEY, 
    REGION_NAME VARCHAR(50) NOT NULL,
    REGION_ZIP CHAR(5) NOT NULL
);

CREATE TABLE CATEGORY (
    CATEGORY_ID INT PRIMARY KEY,
    CATEGORY_NAME VARCHAR(50) NOT NULL,
    CATEGORY_DESCRIPTION TINYTEXT NOT NULL,
    CATEGORY_ACCEPTION_RATIO FLOAT NOT NULL,
    CATEGORY_MIN INT NOT NULL
);



CREATE TABLE USER (
    USER_ID INT PRIMARY KEY,
    USER_FIRSTNAME VARCHAR(50) NOT NULL,
    USER_SURNAME VARCHAR(50) NOT NULL,
    USER_BIRTHDATE DATE,
    USER_USERNAME VARCHAR(50) NOT NULL UNIQUE,
    USER_EMAIL VARCHAR(50) NOT NULL UNIQUE,
    USER_PASSWORD VARCHAR(20) NOT NULL,
    USER_GENDER INT,
    FOREIGN KEY (USER_GENDER) REFERENCES GENDER(GENDER_ID) ON DELETE SET NULL,
    USER_REGION INT, 
    FOREIGN KEY (USER_REGION) REFERENCES REGION(REGION_ID) ON DELETE SET NULL
);



CREATE TABLE USER_TIME (
    USER_TIME_ID INT PRIMARY KEY,
    HOUR_USER_TIME_ID INT,
    FOREIGN KEY (HOUR_USER_TIME_ID) REFERENCES HOUR(HOUR_ID),
    WEEKDAY_USER_TIME_ID INT,
    FOREIGN KEY (WEEKDAY_USER_TIME_ID) REFERENCES WEEKDAY(WEEKDAY_ID), 
    USER_USER_TIME_ID INT,
    FOREIGN KEY (USER_USER_TIME_ID) REFERENCES USER(USER_ID) ON DELETE SET NULL
);



CREATE TABLE USER_CATEGORY (
    USER_USER_CATEGORY_ID INT,
    FOREIGN KEY (USER_USER_CATEGORY_ID) REFERENCES USER(USER_ID),
    CATEGORY_USER_CATEGORY_ID INT,
    FOREIGN KEY (CATEGORY_USER_CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID),
    PRIMARY KEY (USER_USER_CATEGORY_ID, CATEGORY_USER_CATEGORY_ID)
);

CREATE TABLE EVENT (
    EVENT_ID INT PRIMARY KEY,
    EVENT_TIME DATETIME NOT NULL,
    EVENT_REGION INT,
    FOREIGN KEY (EVENT_REGION) REFERENCES REGION(REGION_ID),
    EVENT_CATEGORY INT,
    FOREIGN KEY (EVENT_CATEGORY) REFERENCES CATEGORY(CATEGORY_ID)
);

CREATE TABLE USER_EVENT (
    USER_USER_EVENT_ID INT,
    FOREIGN KEY (USER_USER_EVENT_ID) REFERENCES USER(USER_ID),
    EVENT_USER_EVENT_ID INT,
    FOREIGN KEY (EVENT_USER_EVENT_ID) REFERENCES EVENT(EVENT_ID),
    USER_EVENT_ZUSAGE BIT NOT NULL,
    PRIMARY KEY (USER_USER_EVENT_ID, EVENT_USER_EVENT_ID)

);
